<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit User Data</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f4f7fa;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      min-height: 100vh;
      display: flex;
      align-items: center;
    }
    .form-container {
      background-color: #ffffff;
      border-radius: 20px;
      padding: 40px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease-in-out;
    }
    .form-container:hover {
      transform: translateY(-5px);
      box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
    }
    .form-title {
      margin-bottom: 30px;
      text-align: center;
      font-weight: bold;
      color: #6a11cb;
      font-size: 2rem;
    }
    .form-label {
      font-weight: 600;
      color: #444;
      margin-bottom: 0.5rem;
    }
    .form-control {
      border-radius: 10px;
      padding: 12px;
      border: 1px solid #ddd;
      transition: all 0.3s ease;
    }
    .form-control:focus {
      border-color: #6a11cb;
      box-shadow: 0 0 0 0.2rem rgba(106, 17, 203, 0.25);
    }
    .btn-custom {
      background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
      color: #fff;
      border: none;
      border-radius: 10px;
      padding: 12px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      transition: all 0.3s ease;
    }
    .btn-custom:hover {
      transform: translateY(-3px);
      box-shadow: 0 7px 14px rgba(0, 0, 0, 0.1);
      background: linear-gradient(135deg, #5a0fb0 0%, #1e68e0 100%);
    }
    .error-message {
      color: #dc3545;
      font-size: 0.875rem;
      margin-top: 0.25rem;
    }
    .input-group-text {
      background-color: #f8f9fa;
      border: 1px solid #ddd;
      border-right: none;
      color: #6c757d;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-8 col-lg-6">
        <div class="form-container">
          <h2 class="form-title">Edit User Data</h2>
          <form id="edit-user-form" action="/admin/editUser/<%= userData.email %>" method="POST" onsubmit="validateEditForm(event)">
            <!-- Name -->
            <div class="mb-4">
              <label for="name" class="form-label">Name</label>
              <div class="input-group">
                <span class="input-group-text"><i class="fas fa-user"></i></span>
                <input type="text" id="name" name="name" class="form-control" placeholder="Enter name" value="<%= userData ? userData.name : '' %>" required>
              </div>
            </div>

            <!-- Class -->
            <div class="mb-4">
              <label for="class" class="form-label">Class</label>
              <div class="input-group">
                <span class="input-group-text"><i class="fas fa-graduation-cap"></i></span>
                <input type="number" id="class" name="class" class="form-control" placeholder="Enter class" value="<%= userData ? userData.class : '' %>" required>
              </div>
            </div>

            <!-- Role Number -->
            <div class="mb-4">
              <label for="roleno" class="form-label">Role Number</label>
              <div class="input-group">
                <span class="input-group-text"><i class="fas fa-id-badge"></i></span>
                <input type="number" id="roleno" name="roleno" class="form-control" placeholder="Enter role number" value="<%= userData ? userData.roleno : '' %>" required>
              </div>
            </div>

            <!-- Submit Button -->
            <div class="d-grid">
              <button type="submit" class="btn btn-custom">
                <i class="fas fa-save me-2"></i>Save Changes
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <script>
    function validateEditForm(event) {
      event.preventDefault();

      const name = document.getElementById('name');
      const userClass = document.getElementById('class');
      const rollNo = document.getElementById('roleno');

      let isValid = true;

      const nameRegex = /^[a-zA-Z ]+$/;

      // Validate Name
      if (!name.value.trim()) {
        setError(name, 'Name is required.');
        isValid = false;
      } else if (!nameRegex.test(name.value)) {
        setError(name, 'Name must contain only letters and spaces.');
        isValid = false;
      } else {
        clearError(name);
      }

      // Validate Class
      if (!userClass.value.trim() || isNaN(userClass.value) || userClass.value <= 0) {
        setError(userClass, 'Class must be a positive number.');
        isValid = false;
      } else {
        clearError(userClass);
      }

      // Validate Role Number
      if (!rollNo.value.trim() || isNaN(rollNo.value) || rollNo.value <= 0) {
        setError(rollNo, 'Role Number must be a positive number.');
        isValid = false;
      } else {
        clearError(rollNo);
      }

      // Submit the form if all validations pass
      if (isValid) {
        event.target.submit();
      }
    }

    function setError(element, message) {
      const parent = element.closest('.mb-4');
      let errorElement = parent.querySelector('.error-message');
      if (!errorElement) {
        errorElement = document.createElement('div');
        errorElement.classList.add('error-message');
        parent.appendChild(errorElement);
      }
      errorElement.textContent = message;
      element.classList.add('is-invalid');
    }

    function clearError(element) {
      const parent = element.closest('.mb-4');
      const errorElement = parent.querySelector('.error-message');
      if (errorElement) {
        errorElement.remove();
      }
      element.classList.remove('is-invalid');
    }
  </script>

  <!-- Bootstrap JS Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>